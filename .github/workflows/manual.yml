name: Build and Release for Mac and Windows
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: python -m PyInstaller --onefile --windowed --name 3cx_sync --add-data "conf/app_defaults.ini;conf" --add-data "conf/csv_mapping_defaults.json;conf" main.py
            OUT_FILE_NAME: dist/3cx_sync.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                python -m PyInstaller --onefile --windowed --name 3cx_sync --add-data "conf/app_defaults.ini:conf" --add-data "conf/csv_mapping_defaults.json:conf" main.py &&
                cd dist/ &&
                zip -r9 3cx_sync 3cx_sync.app/                
            OUT_FILE_NAME: dist/3cx_sync.zip
            ASSET_MIME: application/zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build application for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ matrix.TARGET }}
          path: ${{ matrix.OUT_FILE_NAME }}

  upload_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact-windows
          path: dist/
      - name: Download macOS build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact-macos
          path: dist/

      - name: Create and upload release assets
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}